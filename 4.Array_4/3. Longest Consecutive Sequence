#include <bits/stdc++.h>

int lengthOfLongestConsecutiveSequence(vector<int> &arr, int n) 
{
    sort(arr.begin(),arr.end());
    int lmax = INT_MIN;
    int l,j,i=0;
    while(i<n)
    {
        l = 1;
        j = i+1;
        while(j<n)
        {
            if(arr[i] == arr[j]-1)
            {
                l++;
                i++;
                j++;
            }
            else if(arr[i]==arr[j])
            {
                i++;
                j++;
            }
            else
                break;
        }
        lmax = max(l,lmax);
        i=j;
    }
    return lmax;
}

//optimal...O(n) time and O(n) space
//if(n==0)
    //     return 0;
    // unordered_set<int> s;
    // for(int i=0;i<n;i++)
    //     s.insert(arr[i]);
    // int count,ans = INT_MIN;
    // for(auto i : s)
    // {
    //     count=1;
    //     if(s.find(i-1)==s.end())
    //     {
    //         for(int j=i+1;(s.find(j)!=s.end());j++)
    //         {
    //             count++;
    //         }
    //     }
    //     ans = max(count,ans);
    // }
    // return ans;



// without inner loop

//sort(arr.begin(),arr.end());
    // int last = INT_MIN;
    // int ans = 1,count=0;
    // for(int i=0;i<n;i++)
    // {
    //     if(arr[i]-1==last)
    //     {
    //         count++;
    //         last = arr[i];
    //     }
    //     else if(arr[i]!=last)
    //     {
    //         count=1;
    //         last = arr[i];
    //     }
    //     ans = max(ans,count);
    // }
    // return ans;

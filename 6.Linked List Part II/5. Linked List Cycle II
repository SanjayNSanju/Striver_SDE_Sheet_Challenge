Node *firstNode(Node *head)
{
    Node *entry = head;
    Node *slow = head;
    Node *fast = head;
    while(fast->next!=NULL and fast->next->next!=NULL)
    {
        slow = slow->next;
        fast = fast->next->next;
        if(slow==fast)
        {
            while(entry!=slow)
            {
                entry = entry->next;
                slow = slow->next;
            }
            return slow;
        }
    }
    return NULL;
}

//Naive
// Node *firstNode(Node *head)
// {
//     //    Write your code here.
//     unordered_set<Node*> s;
//     Node *temp = head;
//     while(temp!=NULL)
//     {
//         if(s.find(temp)!=s.end())
//             return temp;
//         s.insert(temp);
//         temp = temp->next;
//     }
//     return NULL;
// }
